{{- if .Values.clid }}
{{ $clidStringData := dict "CLID" .Values.clid }}
{{ template "nuxeo.secret" (merge (dict "dataType" "stringData" "name" (printf "%s-%s" (include "nuxeo.fullname" .) "instance-clid") "data" $clidStringData ) .) }}
{{- end }}
{{- if and (.Values.mongodb.auth.enabled) (not .Values.mongodb.auth.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.mongodb.name" . -}}
{{- $secretData := dict "mongodb-username" (b64enc .Values.mongodb.auth.username) "mongodb-password" (b64enc .Values.mongodb.auth.password) -}}
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- if and (.Values.postgresql.enabled) (not .Values.postgresql.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.postgresql.name" . -}}
{{- $secretData := dict "postgresql-username" (b64enc .Values.postgresql.username) "postgresql-password" (b64enc .Values.postgresql.password) -}}
  {{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- if and (.Values.elasticsearch.basicAuth.enabled) (not .Values.elasticsearch.basicAuth.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.elasticsearch.name" . -}}
{{- $secretData := dict "elasticsearch-username" (b64enc .Values.elasticsearch.basicAuth.username) "elasticsearch-password" (b64enc .Values.elasticsearch.basicAuth.password) -}}
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- if and (.Values.kafka.auth.enabled) (not .Values.kafka.auth.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.kafka.name" . -}}
{{- $secretData := dict "kafka-username" (b64enc .Values.kafka.auth.username) "kafka-password" (b64enc .Values.kafka.auth.password) -}}
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- if and (.Values.googleCloudStorage.enabled) (not .Values.googleCloudStorage.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.gcp.name" . -}}
{{- $secretData := dict "gcp-project-id" (b64enc .Values.googleCloudStorage.gcpProjectId) "gcp-credentials" (b64enc .Values.googleCloudStorage.credentials) -}}
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- if and (.Values.amazonS3.enabled) (not .Values.amazonS3.existingSecret) }}
---
{{- $secretName := include "nuxeo.secret.amazon.name" . -}}
{{- $secretData := dict "amazon-key-id" (b64enc .Values.amazonS3.accessKeyId) "amazon-secret-key" (b64enc .Values.amazonS3.secretAccessKey) -}}
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $secretName "data" $secretData) .) }}
{{- end }}
{{- range $name, $data := .Values.extraStringSecrets }}
{{- with $ }}
---
{{ template "nuxeo.secret" (merge (dict "dataType" "stringData" "name" $name "data" $data) .) }}
{{- end }}
{{- end }}
{{- range $name, $data := .Values.extraSecrets }}
{{- with $ }}
---
{{ template "nuxeo.secret" (merge (dict "dataType" "data" "name" $name "data" $data) .) }}
{{- end }}
{{- end }}
