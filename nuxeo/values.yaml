image:
  repository: docker.packages.nuxeo.com/nuxeo/nuxeo
  tag: latest
  pullSecrets: []
  pullPolicy: Always
replicaCount: 1
clusterDomain: cluster.local
# virtualHost:
podLabels: {}
podAnnotations: {}
nodeSelector: {}
affinity: {}
tolerations: []
resources:
  requests:
    cpu: 0.5
    memory: 1Gi
  limits:
    cpu: 1
    memory: 2Gi
service:
  labels: {}
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  protocol: TCP
probePath: /nuxeo/runningstatus
livenessProbe:
  initialDelaySeconds: 100
  periodSeconds: 20
  successThreshold: 1
  failureThreshold: 5
  timeoutSeconds: 10
readinessProbe:
  periodSeconds: 20
  initialDelaySeconds: 100
  successThreshold: 1
  timeoutSeconds: 10
  failureThreshold: 5
# packages:
# clid:
mongodb:
  enabled: false
  protocol: mongodb
  port: 27017
  # host:
  # credentials:
postgresql:
  enabled: false
  port: 5432
  # host:
  # username:
  # password:
elasticsearch:
  enabled: false
  protocol: http
  port: 9200
  clusterName: elasticsearch
  indexNumberOfReplicas: 0
  restClient:
    socketTimeoutMs: 300000
    connectionTimeoutMs: 300000
  # host:
kafka:
  enabled: false
  port: 9092
  # host:
redis:
  enabled: false
googleCloudStorage:
  enabled: false
  # gcpProject:
  # credentials:
  # bucket:
  ## The bucket prefix needs to end with /
  # bucketPrefix:
amazonS3:
  enabled: false
  # accessKeyId:
  # secretAccessKey:
  # region:
  # bucket:
  ## The bucket prefix needs to end with /
  # bucketPrefix:
persistentVolumeStorage:
  enabled: false
  # labels: {}
  # annotations: {}
  # storageClass:
  # size:
ingress:
  enabled: false
  # labels: {}
  # annotations: {}
  # hostname:
  # path:
  # tls:
logs:
  persistence:
    enabled: false
    # labels: {}
    # annotations: {}
    # storageClass:
    # size:
##  Custom parameters to be appended to nuxeo.conf
# customParams: |-
## Custom environment variables to set in the container
## customEnvs allows to define environment variables from a value or a key of a ConfigMap
# customEnvs:
## customEnvsFrom allows to load the content of a ConfigMap as environment variables
# customEnvsFrom:
extraVolumeMounts: []
extraVolumes: []
extraSecrets: {}
